package com.rakbank.accountmanagement.service;

import org.apache.el.stream.Optional;
import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;
import com.rakbank.accountmanagement.dto.AccountDTO;
import com.rakbank.accountmanagement.exception.EmailAlreadyExistsException;
import com.rakbank.accountmanagement.model.Account;
import com.rakbank.accountmanagement.repository.AccountRepository;

@Service
public class AccountService {
	@Autowired
	private AccountRepository accountRepository;

	@Autowired
	private ModelMapper modelMapper;

	@Autowired
	private BCryptPasswordEncoder passwordEncoder;

	public AccountDTO createAccount(AccountDTO accountDTO) {

		if (accountRepository.existsByEmail(accountDTO.getEmail())) {
			throw new EmailAlreadyExistsException("An account with this email already exists");
		}

		accountDTO.setPassword(passwordEncoder.encode(accountDTO.getPassword()));
		Account account = modelMapper.map(accountDTO, Account.class);
		account = accountRepository.save(account);
		return modelMapper.map(account, AccountDTO.class);
	}

	public String loginAccount(AccountDTO accountDTO) {
        Optional<Account> accountOptional = accountRepository.findByEmail(accountDTO.getEmail());

	}

}
